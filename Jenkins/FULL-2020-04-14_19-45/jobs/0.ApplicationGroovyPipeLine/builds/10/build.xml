<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.38">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.BooleanParameterValue>
          <name>Compile</name>
          <description>Application Compile </description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Review</name>
          <description>Application Review  </description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Test</name>
          <description>Application Test    </description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Metrics</name>
          <description>Application Metrics </description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Package</name>
          <description>Application Package </description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>DockerImage</name>
          <description>Docker Image Build  </description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>Compile</string>
        <string>Review</string>
        <string>Test</string>
        <string>Metrics</string>
        <string>Package</string>
        <string>DockerImage</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.16">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
  </actions>
  <queueId>1</queueId>
  <timestamp>1586672674598</timestamp>
  <startTime>1586672674644</startTime>
  <result>FAILURE</result>
  <duration>14351</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>#!/usr/bin/env groovy
import hudson.model.*
import hudson.EnvVars
import groovy.json.JsonSlurperClassic
import groovy.json.JsonBuilder
import groovy.json.JsonOutput
import java.net.URL

node{

properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: &apos;7&apos;, artifactNumToKeepStr: &apos;10&apos;, daysToKeepStr: &apos;7&apos;, numToKeepStr: &apos;10&apos;)),
    parameters([
        booleanParam(defaultValue: true, description: &apos;Application Compile &apos;, name: &apos;Compile&apos;),
        booleanParam(defaultValue: true, description: &apos;Application Review  &apos;, name: &apos;Review&apos;),
        booleanParam(defaultValue: true, description: &apos;Application Test    &apos;, name: &apos;Test&apos;),
        booleanParam(defaultValue: true, description: &apos;Application Metrics &apos;, name: &apos;Metrics&apos;),
        booleanParam(defaultValue: true, description: &apos;Application Package &apos;, name: &apos;Package&apos;),
        booleanParam(defaultValue: true, description: &apos;Docker Image Build  &apos;, name: &apos;DockerImage&apos;)
        ])
    ])

    stage(&apos;Checkout&apos;){
        cleanWs()
        git &apos;https://github.com/rrahul4/DevOpsClassCodes&apos;
    }        
    
    if (params.Compile) {
        stage(&apos;Compile&apos;){
            withMaven(maven:&apos;MyMaven&apos;){
            sh &apos;mvn compile&apos;
            }
        }        
    }

    if (params.Review) {
        stage(&apos;Review&apos;){
            withMaven(maven:&apos;MyMaven&apos;){
            sh &apos;mvn pmd:pmd&apos;
            pmd canComputeNew: false, defaultEncoding: &apos;&apos;, healthy: &apos;&apos;, pattern: &apos;target/pmd.xml&apos;, unHealthy: &apos;&apos;
            }
        }        
    }

    if (params.Test) {
        stage(&apos;Test&apos;)  {
            withMaven(maven:&apos;MyMaven&apos;){
            sh &apos;mvn test&apos;
            junit &apos;target/surefire-reports/*.xml&apos;
            }
        }        
    }

    if (params.Metrics) {
        stage(&apos;Metrics&apos;){
            withMaven(maven:&apos;MyMaven&apos;){
            sh &apos;mvn cobertura:cobertura -Dcobertura.report.format=xml&apos;
            cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: &apos;target/site/cobertura/coverage.xml&apos;, conditionalCoverageTargets: &apos;70, 0, 0&apos;, failUnhealthy: false, failUnstable: false, lineCoverageTargets: &apos;80, 0, 0&apos;, maxNumberOfBuilds: 0, methodCoverageTargets: &apos;80, 0, 0&apos;, onlyStable: false, sourceEncoding: &apos;ASCII&apos;, zoomCoverageChart: false
            }
        }        
    }

    if (params.Package) {
        stage(&apos;Package&apos;){
           withMaven(maven:&apos;MyMaven&apos;){
            sh &apos;mvn package&apos;
            }
        }        
    }
    
    if (params.DockerImage) {
        stage(&apos;Docker Image Build&apos;) {
            writeFile file: &apos;Dockerfile&apos;, 
            text: &apos;&apos;&apos;FROM tomcat
            Maintainer Rahulkumar Rakhonde
            ADD addressbook.war  /usr/local/tomcat/webapps/
            CMD &quot;catalina.sh&quot; &quot;run&quot;&apos;&apos;&apos;
            
            sh label: &apos;&apos;,script: &apos;&apos;&apos;
            cp $WORKSPACE/target/*.war .
        
            sudo docker build . -t rrahul4/addressbook:$BUILD_NUMBER
            sudo docker push rrahul4/addressbook:$BUILD_NUMBER &apos;&apos;&apos;
        }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>346426573</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>12583523844</long>
      </entry>
      <entry>
        <string>run</string>
        <long>3249894384</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>7974505770</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>909120416</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>14</iota>
    <head>1:14</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>